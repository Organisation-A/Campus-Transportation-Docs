openapi: 3.0.0
info:
  title: GPS Tracking API
  description: The API for real-time location tracking for campus transportation services
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/WendyMaboa/GPSTracking/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://api.campus-transportation.com/v1
  description: Main API server
paths:
  /vehicles:
    get:
      tags:
      - Vehicle
      description: Retrieve a list of all registered vehicles
      operationId: getVehicles
      parameters:
      - name: skip
        in: query
        description: Number of records to skip
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: Maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: A list of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
    post:
      tags:
      - Vehicle
      description: Register a new vehicle for tracking
      operationId: registerVehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRegistrationInfo'
      responses:
        "200":
          description: Vehicle successfully registered
  /vehicles/{id}:
    get:
      tags:
      - Vehicle
      description: Retrieve detailed information for a specific vehicle
      operationId: getVehicle
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Vehicle details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
    put:
      tags:
      - Vehicle
      description: Update vehicle details
      operationId: updateVehicle
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        "200":
          description: Vehicle details updated
    delete:
      tags:
      - Vehicle
      description: Remove a vehicle from the system
      operationId: deleteVehicle
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Vehicle successfully removed
  /vehicles/{id}/location:
    get:
      tags:
      - Location
      description: Retrieve the real-time location of a specific vehicle
      operationId: getVehicleLocation
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Real-time location of the vehicle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
  /routes:
    get:
      tags:
      - Route
      description: Retrieve predefined routes for campus transportation
      operationId: getRoutes
      responses:
        "200":
          description: A list of predefined routes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'
    post:
      tags:
      - Route
      description: Add a new route
      operationId: addRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        "200":
          description: Route successfully added
  /vehicles/{id}/schedule:
    get:
      tags:
      - Schedule
      description: Retrieve the schedule for a specific vehicle
      operationId: getVehicleSchedule
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Vehicle schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
components:
  schemas:
    Vehicle:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the vehicle
        name:
          type: string
          description: Name of the vehicle
        type:
          type: string
          description: "Type of vehicle (e.g., bus, shuttle)"
    VehicleRegistrationInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Name of the vehicle
        type:
          type: string
          description: Type of vehicle
    Location:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time
    Route:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the route
        name:
          type: string
          description: Name of the route
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Route_coordinates'
    Schedule:
      type: object
      properties:
        vehicleId:
          type: string
          description: Unique identifier for the vehicle
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/Schedule_schedule'
    Route_coordinates:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    Schedule_schedule:
      type: object
      properties:
        time:
          type: string
          format: date-time
        stop:
          type: string
          description: Stop name
